name: Build Windows

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build:
    runs-on: windows-latest
    env:
      TAURI_SKIP_SIGNING: 'true'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build Tauri bundle
        run: pnpm tauri build --bundles nsis

      - name: Locate Windows installer
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        id: find_installer
        shell: pwsh
        run: |
          $installer = Get-ChildItem -Path src-tauri/target/release/bundle/nsis -Filter *.exe -Recurse | Select-Object -First 1 -ExpandProperty FullName
          if (-not $installer) {
            Write-Error 'Windows installer not found.'
          }
          "path=$installer" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Upload release asset
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.release.tag_name || github.ref_name }}
          name: ${{ github.event.release.tag_name || github.ref_name }}
          generate_release_notes: true
          files: ${{ steps.find_installer.outputs.path }}
